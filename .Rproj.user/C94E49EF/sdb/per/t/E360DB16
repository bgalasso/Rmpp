{
    "collab_server" : "",
    "contents" : "##  ========================================================================  ##\n##  Bastian Galasso-Diaz, Yoav Zemel and Miguel de Carvalho       \t\t        ##\n##  Copyright (C) 2019                                                        ##\n##  ------------------------------------------------------------------------  ##\n##  This program is free software; you can redistribute it and/or modify      ##\n##  it under the terms of the GNU General Public License as published by      ##\n##  the Free Software Foundation; either version 2 of the License, or         ##\n##  (at your option) any later version.                                       ##\n##                                                                            ##\n##  This program is distributed in the hope that it will be useful,           ##\n##  but WITHOUT ANY WARRANTY; without even the implied warranty of            ##\n##  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the             ##\n##  GNU General Public License for more details.                              ##\n##                                                                            ##\n##  You should have received a copy of the GNU General Public License         ##\n##  along with this program; if not, a copy is available at                   ##\n##  http://www.r-project.org/Licenses/                                        ##\n##  ========================================================================  ##\n\n##  ========================================================================  ##\n##    Define objects                                                          ##\n##  ------------------------------------------------------------------------  ##\n\nBAlignment <- function(y, prior, mcmc, grid = seq(0,1, length = 2^8),\n                         na.rm = FALSE, parallel = TRUE, status = 1)\n    UseMethod(\"BAlignment\")\n\n##  ========================================================================  ##\n##    Define defaults function \t\t\t\t\t\t\t\t                                ##\n##  ------------------------------------------------------------------------  ##\n\nBAlignment.default <- function(y, prior, mcmc, grid = seq(0,1, length = 2^8),\n                         na.rm = FALSE, parallel = TRUE, status = 1){\n\n\tstopifnot(is.matrix(y),is.list(prior),is.list(mcmc),is.vector(status))\n\tif(parallel)\n\t\tCORES <- parallel::detectCores()\n\n\tif(!(status %in% c(1,2,3)))\n\t\tstop('status is not a valid option')\n\n\tnsave <- mcmc$nsave\n\n\tcat('Fitting the densities with Bernstein Polynomials...','\\n')\n\n\tfit <- array(NA,dim=c(lgrid,nsave,N))\n  \tfor(k in 1:N){\n  \t\taux <- BDPdensity(y=na.omit(y[,k]),support = 1, prior,grid, mcmc,\n  \t\t\tstate=NULL,status = TRUE)\n  \t\tfit[,,k] <- matrix(aux$fun,nrow=lgrid)\n \t  }\n\n \tBD.dist <- function(y,k,t){\n \t\t a <- c()\n  \t\tfor(i in 1:length(y)){\n  \t\t  aux = y[i]\n  \t\t  a[i] <- sum(fit[which(xx <= aux),t,k])/sum(fit[,t,k])\n  \t\t}\n \t a\n\t}\n\n\tNtrain <- dim(y)[2]\n\tNpoints <- c()\n\tfor(k in 1:Ntrain){\n\t\tNpoints[k] <- length(na.omit(y[,k]))\n\t}\n\twhoisbase <- 1\n\tif(status == 1){\n\t  status_a = 1\n\t  status_w = status_f = 0\n  \talig_traj <- array(NA, dim=c(max(Npoints),N,nsave))\n\t  for(t in 1:nsave){\n    \tspike.smooth <- function(j,x) BD.dist(x,j,s,t)\n   \t    source(\"./R/warp_bayesian.R\")\n    \talig_traj[,,t] <- aligned.spike.mat\n\t  }\n  \toutput <- list(Alig.traj = alig_traj)\n\t} else if(status == 2){\n\t  status_w = 1\n\t  status_a = status_f = 0\n\t  warp_traj <- array(NA,dim=c(lgrid,N,nsave))\n\t  for(t in 1:nsave){\n\t    spike.smooth <- function(j,x) BD.dist(x,j,s,t)\n\t    source(\"./R/warp_bayesian.R\")\n\t    warp_traj[,,t] <- warpinv\n\t  }\n\t  output <- list(Warp.traj = warp_traj)\n\t} else if(status == 3){\n\t  status_f = 1\n\t  status_w = status_a = 0\n\t  frechet_traj <- array(NA,dim=c(lgrid,nsave))\n\t  for(t in 1:nsave){\n\t    spike.smooth <- function(j,x) BD.dist(x,j,s,t)\n\t    source(\"./R/warp_bayesian.R\")\n\t    frechet_traj[,t] <- baryvals\n\t  }\n\t  output <- list(Frechet.traj = frechet_traj)\n}\n\n\n}\n",
    "created" : 1559356473834.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3510189769",
    "id" : "E360DB16",
    "lastKnownWriteTime" : 1559358462,
    "last_content_update" : 1559358462981,
    "path" : "~/Desktop/Rmpp/Rmpp/R/BAlignment.R",
    "project_path" : "R/BAlignment.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}